class gitPush { //[I-S]LN=0;[I-E]
  public void GitPush(String link, String menssage, String pasth, String token, String sha) { //[I-S]LN=1;[I-E]
    try { //[I-S]LN=2;[I-E]
      byte[] date = readFile(pasth); //[I-S]LN=3;[I-E]
      String encode = Base64.getEncoder().encodeToString(date); //[I-S]LN=4;[I-E]
 //[I-S]LN=5;[I-E]
      // json que sera enviado para api.github //[I-S]LN=6;[I-E]
 //[I-S]LN=7;[I-E]
      StringBuilder json = new StringBuilder(); //[I-S]LN=8;[I-E]
      json.append("{\n  \"message\": \"").append(menssage).append("\",\n  \"content\": \"").append(encode).append("\",\n  \"branch\": \"main\""); //[I-S]LN=9;[I-E]
      if (sha != null && !sha.isEmpty()) json.append(",\n  \"sha\": \"").append(sha).append("\""); //[I-S]LN=10;[I-E]
      json.append("\n}"); //[I-S]LN=11;[I-E]
      Console.log("{\n  \"message\": \""+menssage+"\",\n  \"branch\": \"main\",\n  "+((sha != null && !sha.isEmpty())?"\"sha\": \""+sha:"")+"\"\n}"); //[I-S]LN=12;[I-E]
 //[I-S]LN=13;[I-E]
      // connect com o github //[I-S]LN=14;[I-E]
 //[I-S]LN=15;[I-E]
      HttpURLConnection com = (HttpURLConnection) new URL(link).openConnection(); //[I-S]LN=16;[I-E]
      com.setRequestMethod("PUT"); //[I-S]LN=17;[I-E]
      com.setDoOutput(true); //[I-S]LN=18;[I-E]
      com.setRequestProperty("Authorization", "token " + token); //[I-S]LN=19;[I-E]
      com.setRequestProperty("Content-Type", "application/json"); //[I-S]LN=20;[I-E]
 //[I-S]LN=21;[I-E]
      OutputStream output = com.getOutputStream(); //[I-S]LN=22;[I-E]
      output.write(json.toString().getBytes("UTF-8")); //[I-S]LN=23;[I-E]
      output.flush(); //[I-S]LN=24;[I-E]
      output.close(); //[I-S]LN=25;[I-E]
 //[I-S]LN=26;[I-E]
      /// vierifica se teve algum erro ao conectar como github //[I-S]LN=27;[I-E]
 //[I-S]LN=28;[I-E]
      int menss = com.getResponseCode(); //[I-S]LN=29;[I-E]
      Console.log(menss == 201 || menss == 200 ? "file enviado sucess" : "erro em algum folder"); //[I-S]LN=30;[I-E]
 //[I-S]LN=31;[I-E]
      InputStream input = (menss >= 400) ? com.getErrorStream() : com.getInputStream(); //[I-S]LN=32;[I-E]
      BufferedReader reader = new BufferedReader(new InputStreamReader(input)); //[I-S]LN=33;[I-E]
      StringBuilder result = new StringBuilder(); //[I-S]LN=34;[I-E]
      String line; //[I-S]LN=35;[I-E]
      while ((line = reader.readLine()) != null) result.append(line); //[I-S]LN=36;[I-E]
      Console.log("\nreposta: " + result.toString()); //[I-S]LN=37;[I-E]
      input.close(); //[I-S]LN=38;[I-E]
    } catch (Exception e) { //[I-S]LN=39;[I-E]
      Console.log(e); //[I-S]LN=40;[I-E]
    } //[I-S]LN=41;[I-E]
  } //[I-S]LN=42;[I-E]
 //[I-S]LN=43;[I-E]
  /// função que ve o tamanho do file que sera enviado para git para não manda faltando em byte //[I-S]LN=44;[I-E]
 //[I-S]LN=45;[I-E]
  public byte[] readFile(String pasth) { //[I-S]LN=46;[I-E]
    try { //[I-S]LN=47;[I-E]
      FileInputStream fs = new FileInputStream(pasth); //[I-S]LN=48;[I-E]
      ByteArrayOutputStream buffer = new ByteArrayOutputStream(); //[I-S]LN=49;[I-E]
      byte[] date = new byte[1024]; //[I-S]LN=50;[I-E]
      int read; //[I-S]LN=51;[I-E]
      while ((read = fs.read(date)) != -1) buffer.write(date, 0, read); //[I-S]LN=52;[I-E]
      fs.close(); //[I-S]LN=53;[I-E]
      return buffer.toByteArray(); //[I-S]LN=54;[I-E]
    } catch (Exception e) { //[I-S]LN=55;[I-E]
      Console.log(e); //[I-S]LN=56;[I-E]
    } //[I-S]LN=57;[I-E]
    return null; //[I-S]LN=58;[I-E]
  } //[I-S]LN=59;[I-E]
 //[I-S]LN=60;[I-E]
  /// funcão vai busca no json da api.github onde esta o "sha" do file existe no github //[I-S]LN=61;[I-E]
 //[I-S]LN=62;[I-E]
  public String getSha(String link, String token) { //[I-S]LN=63;[I-E]
    try { //[I-S]LN=64;[I-E]
      URL url = new URL(link); //[I-S]LN=65;[I-E]
 //[I-S]LN=66;[I-E]
      HttpURLConnection com = (HttpURLConnection) url.openConnection(); //[I-S]LN=67;[I-E]
      com.setRequestMethod("GET"); //[I-S]LN=68;[I-E]
      com.setRequestProperty("Authorization", "token " + token); //[I-S]LN=69;[I-E]
      com.setRequestProperty("Accept", "application/vnd.github.v3+json"); //[I-S]LN=70;[I-E]
 //[I-S]LN=71;[I-E]
      int menss = com.getResponseCode(); //[I-S]LN=72;[I-E]
      InputStream input = (menss >= 400) ? com.getErrorStream() : com.getInputStream(); //[I-S]LN=73;[I-E]
      BufferedReader reader = new BufferedReader(new InputStreamReader(input)); //[I-S]LN=74;[I-E]
      StringBuilder result = new StringBuilder(); //[I-S]LN=75;[I-E]
      String line; //[I-S]LN=76;[I-E]
      while ((line = reader.readLine()) != null) result.append(line); //[I-S]LN=77;[I-E]
      input.close(); //[I-S]LN=78;[I-E]
 //[I-S]LN=79;[I-E]
      GitPushJson json = (GitPushJson) Json.fromJson(result.toString(), GitPushJson.class, true); //[I-S]LN=80;[I-E]
 //[I-S]LN=81;[I-E]
      if (json != null && json.sha != null) return json.sha; //[I-S]LN=82;[I-E]
      else Console.log("falho o sha"); //[I-S]LN=83;[I-E]
      input.close(); //[I-S]LN=84;[I-E]
    } catch (Exception e) { //[I-S]LN=85;[I-E]
      Console.log(e); //[I-S]LN=86;[I-E]
    } //[I-S]LN=87;[I-E]
    return ""; //[I-S]LN=88;[I-E]
  } //[I-S]LN=89;[I-E]
 //[I-S]LN=90;[I-E]
  public static class GitPushJson { //[I-S]LN=91;[I-E]
    public String sha; //[I-S]LN=92;[I-E]
  }  //[I-S]LN=93;[I-E]
} //[I-S]LN=94;[I-E]